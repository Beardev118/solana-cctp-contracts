/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BurnMessageTest,
  BurnMessageTestInterface,
} from "../../BurnMessage.t.sol/BurnMessageTest";

const _abi = [
  {
    type: "function",
    name: "IS_SCRIPT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "IS_TEST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "failed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testFormatMessage_succeeds",
    inputs: [
      {
        name: "_burnToken",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_mintRecipient",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "msgSender",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testIsValidBurnMessage_returnsFalseForTooShortMessage",
    inputs: [
      {
        name: "_burnToken",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_mintRecipient",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testIsValidBurnMessage_revertsForMalformedMessage",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "testIsValidBurnMessage_revertsForTooLongMessage",
    inputs: [
      {
        name: "_burnToken",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_mintRecipient",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "msgSender",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "vm",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract Vm",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "log",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_address",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes32",
    inputs: [
      {
        name: "",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_int",
    inputs: [
      {
        name: "",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_address",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes32",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_string",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_string",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_uint",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "logs",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60806040526000805462010000600160ff19909216821762ff00001916179091556008805463ffffffff1916909117905534801561003c57600080fd5b50611e198061004c6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063cd2e273e1161005b578063cd2e273e1461010d578063ed24159414610152578063f8ccbf4714610197578063fa7626d41461019f57610088565b80633a7684631461008d5780639649d136146100be578063ba414fa6146100c8578063c82ee77b146100e4575b600080fd5b6100956101a7565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100c66101bf565b005b6100d061028a565b604080519115158252519081900360200190f35b6100c6600480360360608110156100fa57600080fd5b50803590602081013590604001356104bc565b6100c66004803603608081101561012357600080fd5b508035906020810135906040810135906060013573ffffffffffffffffffffffffffffffffffffffff166106b6565b6100c66004803603608081101561016857600080fd5b508035906020810135906040810135906060013573ffffffffffffffffffffffffffffffffffffffff1661094d565b6100d0610d4f565b6100d0610d5e565b737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b60006101c9610d67565b604080517ff28dceb300000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4d616c666f726d6564206d65737361676500000000000000000000000000000060448201529051919250737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb39160648082019260009290919082900301818387803b15801561026657600080fd5b505af115801561027a573d6000803e3d6000fd5b5050505061028781610d8b565b50565b60008054610100900460ff16156102ac5750600054610100900460ff166104b9565b60006102b6610ec8565b156104b65760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d60208083018290527f6661696c6564000000000000000000000000000000000000000000000000000083850152835180840385018152606084019094527f667f9d700000000000000000000000000000000000000000000000000000000060808401908152845160009593947f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49493608490910191908401908083835b602083106103ae57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610371565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040526040518082805190602001908083835b6020831061043057805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016103f3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610492576040519150601f19603f3d011682016040523d82523d6000602084013e610497565b606091505b509150508080602001905160208110156104b057600080fd5b50519150505b90505b90565b600061056d600860009054906101000a900463ffffffff1685858573__$8c977731748aa4504deed57239565df533$__6382c947b7336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561053c57600080fd5b505af4158015610550573d6000803e3d6000fd5b505050506040513d602081101561056657600080fd5b5051610ee3565b9050600061057b8282610f46565b90506105eb600060016105af7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008516610f6c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000851692916bffffffffffffffffffffffff9103166000610f80565b604080517ff28dceb300000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c6964206d657373616765206c656e6774680000000000000000000060448201529051919250737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb39160648082019260009290919082900301818387803b15801561068857600080fd5b505af115801561069c573d6000803e3d6000fd5b505050506106af8162ffffff1916610d8b565b5050505050565b600854604080517f82c947b700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152905160009263ffffffff169187918791879173__$8c977731748aa4504deed57239565df533$__916382c947b7916024808301926020929190829003018186803b15801561074957600080fd5b505af415801561075d573d6000803e3d6000fd5b505050506040513d602081101561077357600080fd5b50516040805160e09690961b7fffffffff00000000000000000000000000000000000000000000000000000000166020870152602486019490945260448501929092526064840152608483015260a48083018690528151808403909101815260c49092019052905060006107e78282610f46565b905061081d6108177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316611012565b8661104b565b61085161084b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316611175565b8761104b565b61088561087f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083166111a6565b856111d7565b604080517ff28dceb300000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c6964206d657373616765206c656e6774680000000000000000000060448201529051737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391606480830192600092919082900301818387803b15801561091e57600080fd5b505af1158015610932573d6000803e3d6000fd5b505050506109458162ffffff1916610d8b565b505050505050565b600854604080517f82c947b700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152905160009263ffffffff169187918791879173__$8c977731748aa4504deed57239565df533$__916382c947b7916024808301926020929190829003018186803b1580156109e057600080fd5b505af41580156109f4573d6000803e3d6000fd5b505050506040513d6020811015610a0a57600080fd5b50516040805160e09690961b7fffffffff00000000000000000000000000000000000000000000000000000000166020808801919091526024870195909552604486019390935260648501919091526084808501919091528151808503909101815260a484018083526008547f82c947b70000000000000000000000000000000000000000000000000000000090915273ffffffffffffffffffffffffffffffffffffffff871660a88601529151909450600093610b099363ffffffff909316928a928a928a9273__$8c977731748aa4504deed57239565df533$__926382c947b79260c8808201939291829003018186803b15801561053c57600080fd5b90506000610b178282610f46565b9050610b4761084b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316611012565b610b7b610b757fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316611175565b8861104b565b610baf610ba97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083166111a6565b866111d7565b610bef610bdd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083166112fd565b60085463ffffffff91821691166111d7565b610cb3610c1d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000831661132d565b73__$8c977731748aa4504deed57239565df533$__6382c947b7876040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610c8257600080fd5b505af4158015610c96573d6000803e3d6000fd5b505050506040513d6020811015610cac57600080fd5b505161104b565b610cde7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008216610d8b565b610d46610d16610cef856000610f46565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000001661135e565b610d417fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000841661135e565b61104b565b50505050505050565b60005462010000900460ff1681565b60005460ff1681565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000090565b610db67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000821661139d565b610e2157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4d616c666f726d6564206d657373616765000000000000000000000000000000604482015290519081900360640190fd5b6084610e4e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316610f6c565b6bffffffffffffffffffffffff161461028757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c6964206d657373616765206c656e67746800000000000000000000604482015290519081900360640190fd5b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b151590565b6040805160e09690961b7fffffffff000000000000000000000000000000000000000000000000000000001660208701526024860194909452604485019290925260648401526084808401919091528151808403909101815260a4909201905290565b815160009060208401610f6164ffffffffff851682846113da565b925050505b92915050565b60181c6bffffffffffffffffffffffff1690565b600080610f8c8661143b565b6bffffffffffffffffffffffff169050610fa58661144f565b610fb985610fb38489611479565b90611479565b1115610fe8577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000091505061100a565b610ff28186611479565b90506110068364ffffffffff1682866113da565b9150505b949350505050565b60006110437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316602460206114eb565b90505b919050565b808214611171577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051808060200182810382526025815260200180611d2f6025913960400191505060405180910390a16040805160208101839052818152600a818301527f2020457870656374656400000000000000000000000000000000000000000000606082015290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a16040805160208101849052818152600a818301527f2020202041637475616c00000000000000000000000000000000000000000000606082015290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1611171611696565b5050565b60006110437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316600460206114eb565b60006110437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316604460206118be565b808214611171577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051808060200182810382526022815260200180611d0d6022913960400191505060405180910390a16040805160208101839052818152600a818301527f2020457870656374656400000000000000000000000000000000000000000000606082015290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16040805160208101849052818152600a818301527f2020202041637475616c00000000000000000000000000000000000000000000606082015290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1611171611696565b60006110437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083168260046118be565b60006110437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316606460206114eb565b60008061136a8361143b565b6bffffffffffffffffffffffff169050600061138584610f6c565b6bffffffffffffffffffffffff169091209392505050565b60006113a8826118df565b64ffffffffff1664ffffffffff14156113c357506000611046565b60006113ce8361144f565b60405110199392505050565b6000806113e78484611479565b90506040518111156113f7575060005b80611425577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000915050611434565b6114308585856118e5565b9150505b9392505050565b60781c6bffffffffffffffffffffffff1690565b600061145a82610f6c565b6114638361143b565b016bffffffffffffffffffffffff169050919050565b81810182811015610f6657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f766572666c6f7720647572696e67206164646974696f6e2e00000000000000604482015290519081900360640190fd5b600060ff82166114fd57506000611434565b61150684610f6c565b6bffffffffffffffffffffffff166115218460ff8516611479565b1115611600576115626115338561143b565b6bffffffffffffffffffffffff1661154a86610f6c565b6bffffffffffffffffffffffff16858560ff166118f8565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115c55781810151838201526020016115ad565b50505050905090810190601f1680156115f25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60208260ff16111561165d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180611d75603a913960400191505060405180910390fd5b60088202600061166c8661143b565b6bffffffffffffffffffffffff169050600061168783611a53565b91909501511695945050505050565b61169e610ec8565b156118905760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d60208083018290527f6661696c6564000000000000000000000000000000000000000000000000000083850152600160608481019190915284518085039091018152608084019094527f70ca10bb0000000000000000000000000000000000000000000000000000000060a08401908152845160009593947f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc4949360a490910191908401908083835b602083106117a257805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611765565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040526040518082805190602001908083835b6020831061182457805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016117e7565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611886576040519150601f19603f3d011682016040523d82523d6000602084013e61188b565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b60008160200360080260ff166118d58585856114eb565b901c949350505050565b60d81c90565b606092831b9190911790911b1760181b90565b6060600061190586611a9c565b915050600061191386611a9c565b915050600061192186611a9c565b915050600061192f86611a9c565b915050838383836040516020018080611daf603591397fffffffffffff000000000000000000000000000000000000000000000000000060d087811b821660358401527f2077697468206c656e6774682030780000000000000000000000000000000000603b84015286901b16604a8201526050016021611d5482397fffffffffffff000000000000000000000000000000000000000000000000000060d094851b811660218301527f2077697468206c656e677468203078000000000000000000000000000000000060278301529290931b9091166036830152507f2e00000000000000000000000000000000000000000000000000000000000000603c82015260408051601d818403018152603d90920190529b9a5050505050505050505050565b7f80000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091011d90565b600080601f5b600f8160ff161115611b045760ff600882021684901c611ac181611b70565b61ffff16841793508160ff16601014611adc57601084901b93505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01611aa2565b50600f5b60ff8160ff161015611b6a5760ff600882021684901c611b2781611b70565b61ffff16831792508160ff16600014611b4257601083901b92505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01611b08565b50915091565b6000611b8260048360ff16901c611ba0565b60ff161760081b62ffff0016611b9782611ba0565b60ff1617919050565b600060f08083179060ff82161415611bbc576030915050611046565b8060ff1660f11415611bd2576031915050611046565b8060ff1660f21415611be8576032915050611046565b8060ff1660f31415611bfe576033915050611046565b8060ff1660f41415611c14576034915050611046565b8060ff1660f51415611c2a576035915050611046565b8060ff1660f61415611c40576036915050611046565b8060ff1660f71415611c56576037915050611046565b8060ff1660f81415611c6c576038915050611046565b8060ff1660f91415611c82576039915050611046565b8060ff1660fa1415611c98576061915050611046565b8060ff1660fb1415611cae576062915050611046565b8060ff1660fc1415611cc4576063915050611046565b8060ff1660fd1415611cda576064915050611046565b8060ff1660fe1415611cf0576065915050611046565b8060ff1660ff1415611d06576066915050611046565b5091905056fe4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e745d4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974657333325d2e20417474656d7074656420746f20696e646578206174206f666673657420307854797065644d656d566965772f696e646578202d20417474656d7074656420746f20696e646578206d6f7265207468616e20333220627974657354797065644d656d566965772f696e646578202d204f76657272616e2074686520766965772e20536c696365206973206174203078a26469706673582212201999b7a8ce3e7332daca611593485258438458b2861a7759e6e65504cc6e053b64736f6c63430007060033";

type BurnMessageTestConstructorParams =
  | [linkLibraryAddresses: BurnMessageTestLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BurnMessageTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class BurnMessageTest__factory extends ContractFactory {
  constructor(...args: BurnMessageTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        BurnMessageTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: BurnMessageTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$8c977731748aa4504deed57239565df533\\$__", "g"),
      linkLibraryAddresses["src/messages/Message.sol:Message"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BurnMessageTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BurnMessageTest__factory {
    return super.connect(runner) as BurnMessageTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BurnMessageTestInterface {
    return new Interface(_abi) as BurnMessageTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BurnMessageTest {
    return new Contract(address, _abi, runner) as unknown as BurnMessageTest;
  }
}

export interface BurnMessageTestLibraryAddresses {
  ["src/messages/Message.sol:Message"]: string;
}
