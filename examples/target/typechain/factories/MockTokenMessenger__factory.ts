/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  MockTokenMessenger,
  MockTokenMessengerInterface,
} from "../MockTokenMessenger";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "handleReceiveMessage",
    inputs: [
      {
        name: "_sourceDomain",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "_sender",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "_messageBody",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610273806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806396abeb7014610030575b600080fd5b6100e86004803603606081101561004657600080fd5b63ffffffff8235169160208101359181019060608101604082013564010000000081111561007357600080fd5b82018360208201111561008557600080fd5b803590602001918460018302840111640100000000831117156100a757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506100fc945050505050565b604080519115158252519081900360200190f35b60408051808201909152600681527f72657665727400000000000000000000000000000000000000000000000000006020918201528151908201206000907fa6de185cadd5025ad112692ff4c6e4d195daa4aeca2980b12e73362933d065f214156101c857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f6d6f636b20726576657274000000000000000000000000000000000000000000604482015290519081900360640190fd5b60408051808201909152600c81527f72657475726e2066616c736500000000000000000000000000000000000000006020918201528251908301207f21d1cf4ebaedcb385cb52d902d18093cdb36373b4fccdac7f63b8d362f1f53d9141561023257506000610236565b5060015b939250505056fea2646970667358221220708da615d719c4ed996309ab11c61d9517045c7e21cb193ef6b2deab45cd205c64736f6c63430007060033";

type MockTokenMessengerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockTokenMessengerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockTokenMessenger__factory extends ContractFactory {
  constructor(...args: MockTokenMessengerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockTokenMessenger & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockTokenMessenger__factory {
    return super.connect(runner) as MockTokenMessenger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockTokenMessengerInterface {
    return new Interface(_abi) as MockTokenMessengerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockTokenMessenger {
    return new Contract(address, _abi, runner) as unknown as MockTokenMessenger;
  }
}
