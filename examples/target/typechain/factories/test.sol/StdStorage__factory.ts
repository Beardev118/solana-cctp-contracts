/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  StdStorage,
  StdStorageInterface,
} from "../../test.sol/StdStorage";

const _abi = [
  {
    type: "function",
    name: "bytesToBytes32",
    inputs: [
      {
        name: "b",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "offset",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "event",
    name: "SlotFound",
    inputs: [
      {
        name: "who",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fsig",
        type: "bytes4",
        indexed: false,
        internalType: "bytes4",
      },
      {
        name: "keysHash",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "slot",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "WARNING_UninitedSlot",
    inputs: [
      {
        name: "who",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "slot",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6101d2610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063535849391461003a575b600080fd5b61004d6100483660046100da565b610063565b60405161005a9190610193565b60405180910390f35b6000806000602085511161007857845161007b565b60205b905060005b818110156100d05780600802868287018151811061009a57fe5b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c9290921791600101610080565b5090949350505050565b600080604083850312156100ec578182fd5b823567ffffffffffffffff80821115610103578384fd5b818501915085601f830112610116578384fd5b813560208282111561012457fe5b604051817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f850116820101818110858211171561015f57fe5b6040528281528483018201891015610175578687fd5b82828601838301379182018101959095529694909301359450505050565b9081526020019056fea26469706673582212202dcf9162a262ca02d785fc3e65e48490d2f0b21044fd56b6969345a147912b8364736f6c63430007060033";

type StdStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StdStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StdStorage__factory extends ContractFactory {
  constructor(...args: StdStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StdStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StdStorage__factory {
    return super.connect(runner) as StdStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StdStorageInterface {
    return new Interface(_abi) as StdStorageInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): StdStorage {
    return new Contract(address, _abi, runner) as unknown as StdStorage;
  }
}
