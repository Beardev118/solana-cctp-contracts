/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IMessageHandler,
  IMessageHandlerInterface,
} from "../IMessageHandler";

const _abi = [
  {
    type: "function",
    name: "handleReceiveMessage",
    inputs: [
      {
        name: "sourceDomain",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "sender",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "messageBody",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class IMessageHandler__factory {
  static readonly abi = _abi;
  static createInterface(): IMessageHandlerInterface {
    return new Interface(_abi) as IMessageHandlerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IMessageHandler {
    return new Contract(address, _abi, runner) as unknown as IMessageHandler;
  }
}
