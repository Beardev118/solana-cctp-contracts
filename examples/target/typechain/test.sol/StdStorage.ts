/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../common";

export interface StdStorageInterface extends Interface {
  getFunction(nameOrSignature: "bytesToBytes32"): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic: "SlotFound" | "WARNING_UninitedSlot"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "bytesToBytes32",
    values: [BytesLike, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "bytesToBytes32",
    data: BytesLike
  ): Result;
}

export namespace SlotFoundEvent {
  export type InputTuple = [
    who: AddressLike,
    fsig: BytesLike,
    keysHash: BytesLike,
    slot: BigNumberish
  ];
  export type OutputTuple = [
    who: string,
    fsig: string,
    keysHash: string,
    slot: bigint
  ];
  export interface OutputObject {
    who: string;
    fsig: string;
    keysHash: string;
    slot: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WARNING_UninitedSlotEvent {
  export type InputTuple = [who: AddressLike, slot: BigNumberish];
  export type OutputTuple = [who: string, slot: bigint];
  export interface OutputObject {
    who: string;
    slot: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface StdStorage extends BaseContract {
  connect(runner?: ContractRunner | null): StdStorage;
  waitForDeployment(): Promise<this>;

  interface: StdStorageInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  bytesToBytes32: TypedContractMethod<
    [b: BytesLike, offset: BigNumberish],
    [string],
    "view"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "bytesToBytes32"
  ): TypedContractMethod<
    [b: BytesLike, offset: BigNumberish],
    [string],
    "view"
  >;

  getEvent(
    key: "SlotFound"
  ): TypedContractEvent<
    SlotFoundEvent.InputTuple,
    SlotFoundEvent.OutputTuple,
    SlotFoundEvent.OutputObject
  >;
  getEvent(
    key: "WARNING_UninitedSlot"
  ): TypedContractEvent<
    WARNING_UninitedSlotEvent.InputTuple,
    WARNING_UninitedSlotEvent.OutputTuple,
    WARNING_UninitedSlotEvent.OutputObject
  >;

  filters: {
    "SlotFound(address,bytes4,bytes32,uint256)": TypedContractEvent<
      SlotFoundEvent.InputTuple,
      SlotFoundEvent.OutputTuple,
      SlotFoundEvent.OutputObject
    >;
    SlotFound: TypedContractEvent<
      SlotFoundEvent.InputTuple,
      SlotFoundEvent.OutputTuple,
      SlotFoundEvent.OutputObject
    >;

    "WARNING_UninitedSlot(address,uint256)": TypedContractEvent<
      WARNING_UninitedSlotEvent.InputTuple,
      WARNING_UninitedSlotEvent.OutputTuple,
      WARNING_UninitedSlotEvent.OutputObject
    >;
    WARNING_UninitedSlot: TypedContractEvent<
      WARNING_UninitedSlotEvent.InputTuple,
      WARNING_UninitedSlotEvent.OutputTuple,
      WARNING_UninitedSlotEvent.OutputObject
    >;
  };
}
